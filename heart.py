# -*- coding: utf-8 -*-
"""heart

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dg2fnhDrdaDQJ95d1H7hFss67MHn7BJ2
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline



data=pd.read_csv('/content/Predicting-Heart-Disease/dataset.csv')

data.head()

data.info()

corrmat=data.corr()
tf=corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(data[tf].corr(),annot=True)

sns.pairplot(data)

from sklearn.model_selection import train_test_split
from sklearn.feature_selection import RFE

x=data.drop('target', axis=1)
y=data['target']

x=x.drop('oldpeak', axis=1)
x=pd.get_dummies(x,columns=['sex'], drop_first=True)
x.head()

from sklearn.preprocessing import StandardScaler

scaler=StandardScaler()
x=scaler.fit_transform(x)

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import cross_val_score

n=list(range(1,50,2))
cv=[]

for k in n:
    knn=KNeighborsClassifier(n_neighbors=k)
    score=cross_val_score(knn,x,y,cv=10,scoring='accuracy')
    cv.append(score.mean())

cv

mse = [1- x for x in cv] 
mse

optimal = n[mse.index(min(mse))]

optimal

X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

knn=KNeighborsClassifier(n_neighbors=9)
knn.fit(X_train,y_train)

prediction=knn.predict(X_test)

from sklearn import metrics

print('Accuracy: ', metrics.accuracy_score(y_test, prediction))

